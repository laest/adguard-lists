name: Update remote whitelists

on:
  # schedule:
  #  - cron: '0 3 * * 0' # Execute every Sunday at 3 a.m.
  workflow_dispatch:

jobs:
  update-remote-whitelists:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4

    - name: Process URLs
      run: |
        mkdir -p whitelists
        while IFS= read -r url || [[ -n "$url" ]]; do
          if [[ -n "$url" && ! "$url" =~ ^# ]]; then
            echo "Processing $url"
            filename=$(basename "$url")
            curl -s -o "downloaded_$filename" "$url"
            
            # Determine the output filename
            if [[ "$filename" != *.txt ]]; then
              output_filename="${filename}.txt"
            else
              output_filename="$filename"
            fi
            output_file="whitelists/${output_filename%.txt}.txt"
            
            touch "$output_file"
            while IFS= read -r line; do
              if [[ -z "$line" ]] || [[ "$line" =~ ^# ]]; then
                # Directly copy empty lines and comments
                echo "$line" >> "$output_file"
              else
                # Process non-empty, non-comment lines
                if [[ ! "$line" =~ ^@@ ]]; then
                  # If the line doesn't start with @@, add @@||
                  line="@@||${line}"
                fi
                # Ensure the line ends with ^$important
                if [[ ! "$line" =~ \^\$important$ ]]; then
                  line="${line}^$important"
                fi
                echo "$line" >> "$output_file"
              fi
            done < "downloaded_$filename"
            rm "downloaded_$filename"
          fi
        done < remote-sources/whitelists.txt

    - name: Commit and push if changed
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add whitelists/*.txt
        git diff --quiet && git diff --staged --quiet || (git commit -m "Update whitelists" && git push)
